////////////////////////////////////////////////////////////////////////////////
/// @brief query cache request handler
///
/// @file
///
/// DISCLAIMER
///
/// Copyright 2014-2015 ArangoDB GmbH, Cologne, Germany
/// Copyright 2004-2014 triAGENS GmbH, Cologne, Germany
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///
///     http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// Copyright holder is ArangoDB GmbH, Cologne, Germany
///
/// @author Jan Steemann
/// @author Copyright 2014-2015, ArangoDB GmbH, Cologne, Germany
/// @author Copyright 2010-2014, triAGENS GmbH, Cologne, Germany
////////////////////////////////////////////////////////////////////////////////

#ifndef ARANGOD_REST_HANDLER_REST_QUERY_CACHE_HANDLER_H
#define ARANGOD_REST_HANDLER_REST_QUERY_CACHE_HANDLER_H 1

#include "Basics/Common.h"
#include "RestHandler/RestVocbaseBaseHandler.h"

namespace triagens {
namespace arango {


////////////////////////////////////////////////////////////////////////////////
/// @brief query request handler
////////////////////////////////////////////////////////////////////////////////

class RestQueryCacheHandler : public RestVocbaseBaseHandler {
  
 public:
  ////////////////////////////////////////////////////////////////////////////////
  /// @brief constructor
  ////////////////////////////////////////////////////////////////////////////////

  explicit RestQueryCacheHandler(rest::HttpRequest*);

  
 public:
  ////////////////////////////////////////////////////////////////////////////////
  /// {@inheritDoc}
  ////////////////////////////////////////////////////////////////////////////////

  bool isDirect() const override;

  ////////////////////////////////////////////////////////////////////////////////
  /// {@inheritDoc}
  ////////////////////////////////////////////////////////////////////////////////

  status_t execute() override;

  
 protected:
  ////////////////////////////////////////////////////////////////////////////////
  /// @brief returns the list of properties
  ////////////////////////////////////////////////////////////////////////////////

  bool readProperties();

  ////////////////////////////////////////////////////////////////////////////////
  /// @brief changes the properties
  ////////////////////////////////////////////////////////////////////////////////

  bool replaceProperties();

  ////////////////////////////////////////////////////////////////////////////////
  /// @brief clears the cache
  ////////////////////////////////////////////////////////////////////////////////

  bool clearCache();
};
}
}

#endif



////////////////////////////////////////////////////////////////////////////////
/// DISCLAIMER
///
/// Copyright 2014-2017 ArangoDB GmbH, Cologne, Germany
/// Copyright 2004-2014 triAGENS GmbH, Cologne, Germany
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///
///     http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// Copyright holder is ArangoDB GmbH, Cologne, Germany
///
/// @author Simon Gr√§tzer
////////////////////////////////////////////////////////////////////////////////

#ifndef ARANGOD_GEO_GEO_PARAMS_H
#define ARANGOD_GEO_GEO_PARAMS_H 1

class S2RegionCoverer;

namespace arangodb {
namespace geo {
  
  // Equatorial radius of earth.
  // Source: http://nssdc.gsfc.nasa.gov/planetary/factsheet/earthfact.html
  const double kEarthRadiusInMeters = (6378.1 * 1000);

  struct NearQueryParams {
    
    // Min and max distance from centroid that we're willing to search.
    double minDistance = 0.0;
    double maxDistance = kEarthRadiusInMeters;
    bool minInclusive = true;
    bool maxInclusive = true;
    
    bool includeDistances = true;
  };
  
  /// contains parameters for s2 region coverer
  struct GeoIndexParams {
    // Should indicate the max number of cells generated by the S2RegionCoverer
    int maxCoverCells;
    // Least detailed level used in coverings. Value between [0, 30]
    int minIndexedLevel;
    // Most detailed level used. Value between [0, 30]
    int maxIndexedLevel;
    
    void configureS2RegionCoverer(S2RegionCoverer* coverer) const;
  };

}  // namespace gep
}  // namespace arangodb

#endif

////////////////////////////////////////////////////////////////////////////////
/// DISCLAIMER
///
/// Copyright 2017 ArangoDB GmbH, Cologne, Germany
///
/// Licensed under the Apache License, Version 2.0 (the "License");
/// you may not use this file except in compliance with the License.
/// You may obtain a copy of the License at
///
///     http://www.apache.org/licenses/LICENSE-2.0
///
/// Unless required by applicable law or agreed to in writing, software
/// distributed under the License is distributed on an "AS IS" BASIS,
/// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/// See the License for the specific language governing permissions and
/// limitations under the License.
///
/// Copyright holder is ArangoDB GmbH, Cologne, Germany
///
/// @author Simon GrÃ¤tzer
////////////////////////////////////////////////////////////////////////////////

#ifndef ARANGOD_GEO_GEO_PARAMS_H
#define ARANGOD_GEO_GEO_PARAMS_H 1

#include "VocBase/voc-types.h"

class S2RegionCoverer;

namespace arangodb {
namespace velocypack {
class Builder;
class Slice;
}
namespace geo {

// Equatorial radius of earth.
// Source: http://nssdc.gsfc.nasa.gov/planetary/factsheet/earthfact.html
const double kEarthRadiusInMeters = (6378.1 * 1000);

enum class QueryType {
  // Specifiy a location for which a geospatial query returns the documents
  // sorted from nearest to farthest.
  NEAR,
  // Select documents with geospatial data that are located entirely within a
  // shape.
  // When determining inclusion, we consider the border of a shape to be part of
  // the shape,
  // subject to the precision of floating point numbers.
  CONTAINS,
  // Select documents whose geospatial data intersects with a specified GeoJSON
  // object.
  INTERSECT
};

/// @brief contains parameters for s2 region coverer
struct RegionCoverParams {
  RegionCoverParams();
  RegionCoverParams(int mC, int wL, int bL)
      : maxNumCoverCells(mC), worstIndexedLevel(wL), bestIndexedLevel(bL) {
    TRI_ASSERT(mC > 0 && wL > 0 && bL > 0);
  }

 public:
  /// @brief read the options from a vpack slice
  void fromVelocyPack(velocypack::Slice const&);

  /// @brief add the options to an opened vpack builder
  void toVelocyPack(velocypack::Builder&) const;

  void configureS2RegionCoverer(S2RegionCoverer* coverer) const;

 public:
  // Should indicate the max number of cells generated by the S2RegionCoverer
  // is treated as a soft limit, only other params are fixed
  int maxNumCoverCells = 8;
  // Least detailed level used in coverings. Value between [0, 30]
  int worstIndexedLevel = 10;
  // Most detailed level used. Value between [0, 30]
  int bestIndexedLevel = 28;
};

}  // namespace geo
}  // namespace arangodb

#endif

done
----
- create new branch
- factor out transactions from LogfileManager
- concept "collection locks"
    - 3 states: READ / WRITE / EXCLUSIVE for locks
- index implementations => moved & renamed to StorageEngine
- move engine files into MMFiles directory
- split IndexElement
- rename *IndexElement to MMFiles*
- move fulltext & geoindex & skiplist helper code into MMFiles
- rename "RocksDBIndex" to "PersistentIndex"

in progress
-----------
- Index API
  - Rename OperationCursor->getMoreMptr => getMoreTokens, "returns" std::vector<TOKEN>&
  - Delete OperationCursor->getMore. Replace by getMoreTokens

to do
-----
- create AqlValue type for document ids
- move engine-specific parts of transaction.cpp into engine
- transaction API
- check for illegal includes
- fix includes during API conversion
- DML API
- DDL API
- index API
- add new serialization RW lock to LogicalCollection. all DML ops must acquire it in read mode, the explicit lock command must acquire it in write mode.


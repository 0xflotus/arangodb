diff -ru zlib-1.2.8-orig/CMakeLists.txt zlib-1.2.8/CMakeLists.txt
--- zlib-1.2.8-orig/CMakeLists.txt	2013-04-29 00:57:10.000000000 +0200
+++ zlib-1.2.8/CMakeLists.txt	2016-02-29 17:20:22.000000000 +0100
@@ -1,8 +1,17 @@
 cmake_minimum_required(VERSION 2.4.4)
 set(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS ON)
 
+if (POLICY CMP0042)
+  cmake_policy(SET CMP0042 OLD)
+endif ()
+
+if (POLICY CMP0048)
+  cmake_policy(SET CMP0048 NEW)
+endif ()
+
 project(zlib C)
 
+set(zlib_VERSION 1.2.8)
 set(VERSION "1.2.8")
 
 option(ASM686 "Enable building i686 assembly implementation")
@@ -202,7 +211,7 @@
 if(UNIX)
     # On unix-like platforms the library is almost always called libz
    set_target_properties(zlib zlibstatic PROPERTIES OUTPUT_NAME z)
-   if(NOT APPLE)
+   if(NOT APPLE AND NOT SOLARIS)
      set_target_properties(zlib PROPERTIES LINK_FLAGS "-Wl,--version-script,\"${CMAKE_CURRENT_SOURCE_DIR}/zlib.map\"")
    endif()
 elseif(BUILD_SHARED_LIBS AND WIN32)
@@ -230,11 +239,13 @@
 # Example binaries
 #============================================================================
 
-add_executable(example test/example.c)
+include_directories(${PROJECT_SOURCE_DIR} ${PROJECT_BINARY_DIR})
+
+add_executable(example EXCLUDE_FROM_ALL test/example.c)
 target_link_libraries(example zlib)
 add_test(example example)
 
-add_executable(minigzip test/minigzip.c)
+add_executable(minigzip EXCLUDE_FROM_ALL test/minigzip.c)
 target_link_libraries(minigzip zlib)
 
 if(HAVE_OFF64_T)
@@ -247,3 +258,33 @@
     target_link_libraries(minigzip64 zlib)
     set_target_properties(minigzip64 PROPERTIES COMPILE_FLAGS "-D_FILE_OFFSET_BITS=64")
 endif()
+
+set(ZLIB_VERSION
+  ${zlib_VERSION}
+  CACHE INTERNAL
+  "${PROJECT_NAME}: Version"
+  FORCE
+)
+
+if (WINDOWS)
+  set(ZLIB_LIBS
+    ${zlib_BINARY_DIR}/${CMAKE_BUILD_TYPE}/zlibstaticd.lib
+    CACHE INTERNAL
+    "${PROJECT_NAME}: Libraries"
+    FORCE
+  )
+else ()
+  set(ZLIB_LIBS
+    ${zlib_BINARY_DIR}/libz.a
+    CACHE INTERNAL
+    "${PROJECT_NAME}: Libraries"
+    FORCE
+  )
+endif ()
+
+set(ZLIB_INCLUDE_DIR
+  ${PROJECT_SOURCE_DIR} ${PROJECT_BINARY_DIR}
+  CACHE INTERNAL
+  "${PROJECT_NAME}: Include Directories"
+  FORCE
+)
